---
title: "Final Project | STAT 419"
subtitle: "Group 4"
author: "Abby Drongpa, Alex Sullivan, Chris Liu, Jett Palmer, Sumanth Thokala"
date: 06-08-2025
format: pdf
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

{{< pagebreak >}}

```{r packages}

library(tidyverse)
library(here)
library(janitor)
library(knitr)
library(ggplot2)
library(knitr)
library(kableExtra)

source(here("all_custom_functions.R"))
theme_set(theme_minimal())
```

```{r data}
cincy <- read_csv(here("data", "cincy.csv")) |>
  rename(Pricerank = PRICERANK,
         Age = AGE)
```

## Introduction

Our data set is a subset of homes in Cincinnati, Ohio, from the year 2002. It includes 552 observations and seven variables, each representing an individual house. This data set is meant to identify factors that influence and may predict the selling of homes.ß

Our ordinal grouping variable, "Pricerank", categorizes home based on their selling prices. Houses sold for less than \$190,000 are coded as 1, those sold between \$190,000 and \$285,000 are coded as 2, and houses sold for more than \$285,000 are coded as 3.

The remaining six variables are explanatory:

-   Area: The size of the house in square feet.

-   BR: The number of bedrooms.

-   BA: The number of bathrooms.

-   Garage: The number of cars the garage(s) can accommodate.

-   Quality: An index of construction quality, where 1 indicates high quality, 2 indicates medium quality, and 3 indicates low quality.

-   Age: The age of the house as of 2002.

## Graphs and Summary Statistics

### House Area Histogram

```{r}
cincy |> ggplot(aes(x=Area)) + geom_histogram() + 
  labs(x="Area (Square Feet)", y = "Count", title="House Size")
```

```{r}
summary(cincy$Area)
round(sd(cincy$Area), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

The distribution is right skewed with a mean area of 2261 ft^2^ and a median of 2061 ft^2^. The standard deviation is 711.06 ft^2^.

### Car Storage Histogram

```{r}
cincy |> ggplot(aes(x=Garage)) + geom_histogram() + 
  labs(x="Number of Cars", y = "Count", title="Size of Garage")
```

The mean number of cars able to be stored in the garage(s) is 2.1 with a median of 2 cars and a standard deviation of 0.65. The distribution reveals several high and low outliers at 0, 4 , 5, 6, and 7 cars. In other words, the distribution is highly concentrated at 2 car garages.

```{r}
summary(cincy$Garage)
round(sd(cincy$Garage), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

### Bedroom Histogram

```{r}
cincy |> ggplot(aes(x=BR)) + geom_histogram() + 
  labs(x="Number of Bedrooms", y = "Count", title="Number of Bedrooms")
```

The distribution of number of bedrooms in each house is roughly normal, with a mean of 3.47 and median of 3 bedrooms. The standard deviation is 1.01 bedrooms.

```{r}
summary(cincy$BR)
round(sd(cincy$BR), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

### Bathrooms Histogram

```{r}
cincy |> ggplot(aes(x=BA)) + geom_histogram() + 
  labs(x="Number of Bathrooms", y = "Count", title="Number of Bathrooms")
```

The distribution of number of bathrooms is skewed the right with a mean of 2.64 and median of 3 bedrooms. The standard deviation is 1.06.

```{r}
summary(cincy$BA)
round(sd(cincy$BA), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

### Construction Quality Bar Chart

```{r}
cincy |> ggplot(aes(x=Quality)) + geom_histogram() + 
  labs(x="Quality of Construction Rating", y = "Count", title="Construction Quality")
```

```{r}
summary(cincy$Quality)
round(sd(cincy$Quality), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

Most houses were given a quality rating of 2 (medium), followed by 3 (low quality), and 1 (high quality).

## Discriminant and Classification Analysis

### Correlated Quantitative Variables

```{r}
kable(cor(cincy |> select(-Pricerank)))
```

```{r}
plot(cincy[,2:7])
```

We will consider correlations above \|0.80\| to be strong. Provided that no correlations exceed this threshold, we will proceed with all six variables.

### Discriminant Analysis

```{r}
discrim(cincy[,-1], cincy$Pricerank)$a.stand
```

$$
Z_1 = 0.705(y_1) + 0.048(y_2) + 0.330(y_3) + 0.113(y_4) - 0.390(y_5) - 0.223(y_6)
$$

$$
Z_2 = -0.546(y_1) + 0.436(y_2) + 0.086(y_3) - 0.010(y_4) - 0.385(y_5) + 0.070(y_6)
$$

```{r}
kable(data.frame(Variable = c("y1", "y5", "y3", "y6", "y4", "y2"),
                 Z1 = c(0.70478207,
                        -0.38983060,
                        0.33024101,
                        -0.22310228,
                        0.11313689,
                        0.04815262)),
      digits = 3,
      col.names = c("Variable", "Z1"))

kable(data.frame(Variable = c("y1", "y2", "y5", "y3", "y6", "y4"),
                 Z2 = c(-0.54597681,
                        0.43649046,
                        -0.38524224,
                        0.08065737,
                        0.07040947,
                        -0.01035619)),
      digits = 3,
      col.names = c("Variable", "Z2"))

```

The standardized coefficients are ranked above according to their variable contributions to group separation in the presence of all other variables.

H0: $\pmb{\alpha_1} = \pmb{\alpha_2} = \pmb{0}$

Ha: At least one $\pmb{\alpha_i} \neq \pmb{0}$ for i = 1, 2

```{r}
test <- discr.sig(cincy[,-1], cincy$Pricerank)
kable(test, digits = 3, col.names = c("Lambda",
                                      "V",
                                      "P-Values"))
```

<!--I might be getting these hypotheses mixed up with the wrong kind of test. Let's double check together on 6/5 in class. -JP-->

```{r}
cincy$Pricerank <- as.factor(cincy$Pricerank)
discr.plot(cincy[, -1], cincy$Pricerank)
```

The plot of the first two linear discriminant functions shows that LD1 creates meaningful separation between the Pricerank groups. Group 1 (circles) and Group 3 (pluses) appear on opposite ends of the LD1 axis, indicating strong discrimination between lower and higher priced homes. Group 2 (triangles), however, overlaps with both groups, particularly along LD2. This suggests that while the first discriminant function captures most of the between group variation, the second function contributes less to distinguishing the groups. Overall, the functions separate the groups moderately well, but the separation isn’t perfect, especially between groups 2 and 3.

### Classification Analysis

The four most important variables from our discriminant analysis were y1, y2, y5, and y3. We will use these four variables to construct linear classification functions and evaluate classification performance.

```{r}
top_vars <- c("Area", "BR", "Quality", "BA")

lin_out <- lin.class(cincy[, top_vars], cincy$Pricerank)

coefs <- as.data.frame(lin_out$coefs)
coefs$c0 <- lin_out$c.0
rownames(coefs) <- levels(as.factor(cincy$Pricerank))

kable(coefs, digits = 3, caption = "Linear Classification Function Coefficients (Top 4 Variables)")

```

Each group has its own classification function of the form

$$
\text{Score}_k = \pmb{b}_k^\top \pmb{x} + c_{0k}
$$

where ( \pmb{x} ) is the vector of the four selected predictors for an observation, and ( \pmb{b}*k ) and ( c*{0k} ) are the corresponding coefficients for group ( k ).

Classification for Observation #1

```{r}
obs1 <- as.numeric(cincy[1, top_vars])
group_names <- rownames(coefs)

scores <- apply(coefs[, -ncol(coefs)], 1, function(b) sum(b * obs1)) + coefs$c0
predicted <- group_names[which.max(scores)]
actual <- as.character(cincy$Pricerank[1])

cat("Predicted Group:", predicted, "\n")
cat("Actual Group:", actual, "\n")
cat("Correct Prediction:", predicted == actual, "\n")

```

The classification was accurate for observation #1.

Performance Analysis:

```{r}
class_results <- rates(cincy[, top_vars], cincy$Pricerank, method = "l")

kable(class_results$`Confusion Matrix`, caption = "Confusion Matrix")

cat("ACCR:", round(class_results$`Correct Class Rate`, 3), "\n")
cat("AER:", round(class_results$`Error Rate`, 3), "\n")

```

The linear classification functions based on Area, BR, Quality, and BA achieve an apparent correct classification rate of 77%, which indicates a reasonably strong ability to separate the three Pricerank groups. The confusion matrix shows that most misclassifications occur between similar ranking categories, which is expected.

## Summary

As stated in the introduction, this project analysed factors that affect the selling price of homes in 2002 in Cincinnati, Ohio, with each observation in our dataset representing a single house. The homes are grouped into three categories of the the Pricerank variable, with homes sold for less than \$190,000 = "1", homes sold for between \$190,000 and \$285,000 = 2, and homes sold for more than \$285,000 = 3, with six explanatory variables to help with classifying a home by Pricerank.

Before performing discriminant analysis, we checked for any strong correlations (i.e., $r \ge \pm 0.8$) between the explanatory variables. No pairs of explanatory variables yielded strong correlations, leading us to an analysis with two discriminant functions. The standardized discriminant function suggests that area, number of bedrooms, number of bathrooms, and overall quality rating contribute the most to separating the groups in the second linear discriminant function.

Perfoming a classification for Pricerank based on the four previously mentioned variables yields an apparent correct classification rate of 0.77 and an apparent error rate of 0.23. These values indicate a reasonably strong ability to classify house Pricerank by area, number of bedrooms, number of bathrooms, and overall quality rating. Most misclassifications occured between similar categories and were narrowly mistaken.

Generally speaking, our team did not encounter highly suprising results when grouping houses on Pricerank. However, one variable our team felt would be useful for separation would be location score because homes vary by neighborhood. This location score would be an integer that takes into consideration school district quality, crime rate, proximity to downtown, etc. Homes with similar features can vary significantly in price when taking their neighborhood into consideration.

## R Code

### Section A

Load dependencies.

```{r, echo=TRUE, results='hide', fig.show='hide', message=FALSE}
library(tidyverse)
library(here)
library(janitor)
library(knitr)
source(here("all_custom_functions.R"))
```

Read in data.

```{r, echo=TRUE, results='hide', message=FALSE, warning=FALSE}
cincy <- read_csv(here("data", "cincy.csv")) |>
  rename(
    Pricerank = PRICERANK,
    Age = AGE
  )
```

### Section B

House area histogram.

```{r, echo=TRUE, results='hide', fig.show='hide', message=FALSE, warning=FALSE}
cincy |> ggplot(aes(x=Area)) + geom_histogram() + 
  labs(x="Area (Square Feet)", y = "Count", title="House Size")
```

House area summary statistics.

```{r, echo=TRUE, results='hide'}
summary(cincy$Area)
round(sd(cincy$Area), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

Car storage histogram.

```{r, echo=TRUE, results='hide', fig.show='hide', message=FALSE, warning=FALSE}
cincy |> ggplot(aes(x=Garage)) + geom_histogram() + 
  labs(x="Number of Cars", y = "Count", title="Size of Garage")
```

Car storage summary statistics.

```{r, echo=TRUE, results='hide'}
summary(cincy$Garage)
round(sd(cincy$Garage), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

Number of bedrooms histogram.

```{r, echo=TRUE, results='hide', fig.show='hide', message=FALSE, warning=FALSE}
cincy |> ggplot(aes(x=BR)) + geom_histogram() + 
  labs(x="Number of Bedrooms", y = "Count", title="Number of Bedrooms")
```

Number of bedrooms summary statistics.

```{r, echo=TRUE, results='hide'}
summary(cincy$BR)
round(sd(cincy$BR), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

Number of bathrooms histogram.

```{r, echo=TRUE, results='hide', fig.show='hide'}
cincy |> ggplot(aes(x=BA)) + geom_histogram() + 
  labs(x="Number of Bathrooms", y = "Count", title="Number of Bathrooms")
```

Number of bathrooms summary statistics.

```{r, echo=TRUE, results='hide'}
summary(cincy$BA)
round(sd(cincy$BA), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

Construction quality bar chart.

```{r, echo=TRUE, results='hide', fig.show='hide', , message=FALSE, warning=FALSE}
cincy |> ggplot(aes(x=Quality)) + geom_histogram() + 
  labs(x="Quality of Construction Rating", y = "Count", title="Construction Quality")
```

Construction quality summary statistics.

```{r, echo=TRUE, results='hide'}
summary(cincy$Quality)
round(sd(cincy$Quality), 3) |>
  kable(col.names = "St Dev", format = "latex", booktabs = FALSE) |>
  kable_styling(latex_options = c(), position = "left")
```

### Section C

Correlation coefficients between all quantitative explanatory variables.

```{r, echo=TRUE, results='hide'}
kable(cor(cincy))
```

Plot of correlation between all quantitative explanatory variables.

```{r, echo=TRUE, results='hide', fig.show='hide'}
plot(cincy[,2:7])
```

Discriminant analysis, standardized functions.

```{r, echo=TRUE, results='hide'}
discrim(cincy[,-1], cincy$Pricerank)$a.stand
```

Ordered standardized coefficients for both functions, by absolute value from zero, descending.

```{r, echo=TRUE, results='hide'}
kable(data.frame(Variable = c("y1", "y5", "y3", "y6", "y4", "y2"),
                 Z1 = c(0.70478207,
                        -0.38983060,
                        0.33024101,
                        -0.22310228,
                        0.11313689,
                        0.04815262)),
      digits = 3,
      col.names = c("Variable", "Z1"))

kable(data.frame(Variable = c("y1", "y2", "y5", "y3", "y6", "y4"),
                 Z2 = c(-0.54597681,
                        0.43649046,
                        -0.38524224,
                        0.08065737,
                        0.07040947,
                        -0.01035619)),
      digits = 3,
      col.names = c("Variable", "Z2"))
```

Hypothesis test on discriminant functions.

```{r, echo=TRUE, results='hide'}
test <- discr.sig(cincy[,-1], cincy$Pricerank)
kable(test, digits = 3, col.names = c("Lambda",
                                      "V",
                                      "P-Values"))
```

Plot of discriminant functions.

```{r, echo=TRUE, results='hide', fig.show='hide'}
cincy$Pricerank <- as.factor(cincy$Pricerank)
discr.plot(cincy[, -1], cincy$Pricerank)
```

Classification analysis with top four variables.

```{r, echo=TRUE, results='hide', , message=FALSE, warning=FALSE}
top_vars <- c("Area", "BR", "Quality", "BA")

lin_out <- lin.class(cincy[, top_vars], cincy$Pricerank)

coefs <- as.data.frame(lin_out$coefs)
coefs$c0 <- lin_out$c.0
rownames(coefs) <- levels(as.factor(cincy$Pricerank))

kable(coefs, digits = 3, caption = "Linear Classification Function Coefficients (Top 4 Variables)")
```

Classification for the first observation (home) in the data set.

```{r, echo=TRUE, results='hide'}
obs1 <- as.numeric(cincy[1, top_vars])
group_names <- rownames(coefs)

scores <- apply(coefs[, -ncol(coefs)], 1, function(b) sum(b * obs1)) + coefs$c0
predicted <- group_names[which.max(scores)]
actual <- as.character(cincy$Pricerank[1])

cat("Predicted Group:", predicted, "\n")
cat("Actual Group:", actual, "\n")
cat("Correct Prediction:", predicted == actual, "\n")
```

Performance analysis of classification.

```{r, echo=TRUE, results='hide'}
class_results <- rates(cincy[, top_vars], cincy$Pricerank, method = "l")

kable(class_results$`Confusion Matrix`, caption = "Confusion Matrix")

cat("ACCR:", round(class_results$`Correct Class Rate`, 3), "\n")
cat("AER:", round(class_results$`Error Rate`, 3), "\n")
```
